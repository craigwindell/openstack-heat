heat_template_version: 2021-04-16

description: A simple template to deploy a single virtual machine with some outputs

parameters:
  ssh_key:
    type: string
    label: SSH Key Name
    description: SSH Key name to be used on the instance.
    default: default_key
  image_name:
    type: string
    label: Image Name
    description: Image Name to apply to the instance
    default: NeCTAR Ubuntu 22.04 LTS (Jammy) amd64
  flavour:
    type: string
    label: Instance size
    description: Instance flavor, eg t3.xsmall
  ip_prefix:
    type: string
    label: Remote IP Prefix for SSH access
    description: Limit access to the instance via SSH, eg 1.2.3.4/16
    default: 0.0.0.0/0

resources:
  server01:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: ssh_key }
      image: { get_param: image_name }
      flavor: { get_param: flavour }
      networks:
        - allocate_network: auto
      security_groups:
        - { get_resource: securitygroup }
  server02:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: ssh_key }
      image: { get_param: image_name }
      flavor: { get_param: flavour }
      networks:
        - allocate_network: auto
      security_groups:
        - { get_resource: securitygroup }
        - { get_resource: securitygroupDB }
  securitygroup:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Provide Access to server01
      name: server-access
  securitygroupDB:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Provide Access to server02 Database
      name: database-access
  secgroup_ssh:
    type: OS::Neutron::SecurityGroupRule
    properties:
      security_group: { get_resource: securitygroup }
      description: SSH Access to Instance
      protocol: tcp
      remote_ip_prefix: { get_param: ip_prefix }
      port_range_min: 22
      port_range_max: 22
  secgroup_db:
    type: OS::Neutron::SecurityGroupRule
    properties:
      security_group: { get_resource: securitygroupDB }
      description: Remote database access
      protocol: tcp
      remote_group: { get_resource: securitygroup }



outputs:
  instance01_ip:
    description: The IP address assigned to server01
    value: { get_attr: [server01, first_address ] }
  instance02_ip:
    description: The IP address assigned to server02
    value: { get_attr: [server02, first_address ] }
